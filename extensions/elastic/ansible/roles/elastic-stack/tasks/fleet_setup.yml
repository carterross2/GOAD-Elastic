- name: Wait for Fleet Server to be ready
  uri:
    url: "http://localhost:8220/api/status"
    method: GET
    status_code: 200
  register: fleet_status
  retries: 30
  delay: 10
  until: fleet_status.status == 200

- name: Setup Fleet
  uri:
    url: "http://localhost:5601/api/fleet/setup"
    method: POST
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
    status_code: [200, 409]  # 409 means already setup

- name: Create Fleet Server policy
  uri:
    url: "http://localhost:5601/api/fleet/agent_policies"
    method: POST
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
    body_format: json
    body:
      name: "Fleet Server Policy"
      description: "Fleet Server Policy"
      namespace: "default"
      monitoring_enabled: ["logs", "metrics"]
      is_default_fleet_server: true
    status_code: [200, 409]
  register: fleet_server_policy

- name: Create Windows Defend policy
  uri:
    url: "http://localhost:5601/api/fleet/agent_policies"
    method: POST
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
    body_format: json
    body:
      name: "Windows-Defend"
      description: "EDR for Windows hosts"
      namespace: "default"
      monitoring_enabled: ["logs", "metrics"]
    status_code: [200, 409]
  register: policy_create

- name: Set policy ID from response or search existing
  set_fact:
    fleet_policy_id: "{{ policy_create.json.item.id if policy_create.status == 200 else 'existing' }}"

- name: Get existing policy ID if policy already exists
  uri:
    url: "http://localhost:5601/api/fleet/agent_policies"
    method: GET
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
  register: existing_policies
  when: fleet_policy_id == 'existing'

- name: Extract existing policy ID
  set_fact:
    fleet_policy_id: "{{ (existing_policies.json.items | selectattr('name', 'equalto', 'Windows-Defend') | list | first).id }}"
  when: fleet_policy_id == 'existing'

- name: Add Elastic Defend integration to Windows policy
  uri:
    url: "http://localhost:5601/api/fleet/package_policies"
    method: POST
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
    body_format: json
    body:
      name: "endpoint-1"
      description: "Elastic Defend integration"
      namespace: "default"
      policy_id: "{{ fleet_policy_id }}"
      package:
        name: "endpoint"
        version: "8.15.0"
      inputs:
        - enabled: true
          streams: []
          type: "endpoint"
          config:
            policy:
              value:
                windows:
                  events:
                    process: true
                    file: true
                    network: true
                    registry: true
                  malware:
                    mode: "prevent"
                  behavior_protection:
                    mode: "prevent"
                  popup:
                    malware:
                      enabled: true
                    behavior_protection:
                      enabled: true
                mac:
                  events:
                    process: true
                    file: true
                    network: true
                  malware:
                    mode: "prevent"
                  behavior_protection:
                    mode: "prevent"
                  popup:
                    malware:
                      enabled: true
                    behavior_protection:
                      enabled: true
                linux:
                  events:
                    process: true
                    file: true
                    network: true
                  malware:
                    mode: "prevent"
                  behavior_protection:
                    mode: "prevent"
                  popup:
                    malware:
                      enabled: true
                    behavior_protection:
                      enabled: true
    status_code: [200, 409]
  register: defend_integration

- name: Create enrollment token
  uri:
    url: "http://localhost:5601/api/fleet/enrollment-api-keys"
    method: POST
    user: elastic
    password: "{{ elastic_password }}"
    force_basic_auth: yes
    headers:
      kbn-xsrf: "true"
      Content-Type: "application/json"
    body_format: json
    body:
      name: "WindowsEnrollToken"
      policy_id: "{{ fleet_policy_id }}"
  register: enroll_token_resp
  until: enroll_token_resp.status == 200
  retries: 5
  delay: 10

- name: Store Fleet enrollment token globally
  set_fact:
    fleet_enrollment_token: "{{ enroll_token_resp.json.item.api_key }}"

- name: Store Fleet enrollment token in dummy host for sharing
  add_host:
    name: "fleet_token_holder"
    fleet_enrollment_token: "{{ enroll_token_resp.json.item.api_key }}"