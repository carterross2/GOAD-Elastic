services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ stack_version }}
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE} -Xmx${ES_HEAP_SIZE}"
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - cluster.name=${CLUSTER_NAME}
      - node.name=elasticsearch
      - path.data=/usr/share/elasticsearch/data
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - network.host=0.0.0.0
      - "ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true"
      # Additional settings for better startup reliability
      - indices.query.bool.max_clause_count=8192
      - action.destructive_requires_name=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: ${ES_MEM_LIMIT}
    volumes:
      - /opt/elastic/esdata:/usr/share/elasticsearch/data:rw
    ports:
      - "${ES_PORT}:9200"
    networks:
      - elastic
    healthcheck:
      test: |
        curl -f -u elastic:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:{{ stack_version }}
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - xpack.security.enabled=true
      - xpack.encryptedSavedObjects.encryptionKey=${ENCRYPTION_KEY}
      - xpack.security.encryptionKey=${ENCRYPTION_KEY}
      - xpack.reporting.encryptionKey=${ENCRYPTION_KEY}
      # Reduce memory pressure
      - NODE_OPTIONS=--max-old-space-size=4096
    mem_limit: ${KB_MEM_LIMIT}
    ports:
      - "${KIBANA_PORT}:5601"
    networks:
      - elastic
    healthcheck:
      test: |
        curl -f http://localhost:5601/api/status || exit 1
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 180s
    restart: unless-stopped

  fleet-server:
    image: docker.elastic.co/beats/elastic-agent:{{ stack_version }}
    container_name: fleet-server
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    environment:
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://elasticsearch:9200
      - FLEET_SERVER_SERVICE_TOKEN=${FLEET_SERVER_SERVICE_TOKEN}
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_ELASTICSEARCH_USERNAME=elastic
      - FLEET_SERVER_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - FLEET_SERVER_HOST=0.0.0.0
      - FLEET_SERVER_PORT=8220
    ports:
      - "${FLEET_PORT}:8220"
    networks:
      - elastic
    restart: unless-stopped

networks:
  elastic:
    driver: bridge