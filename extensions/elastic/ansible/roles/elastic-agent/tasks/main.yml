- name: Create temp directory
  win_file:
    path: C:\Temp
    state: directory

- name: Download Elastic Agent MSI
  win_get_url:
    url: "https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-{{ stack_version }}-windows-x86_64.msi"
    dest: "C:\\Temp\\elastic-agent-{{ stack_version }}-windows-x86_64.msi"
  retries: 3
  delay: 10

- name: Get Fleet enrollment token from shared host
  set_fact:
    enrollment_token: "{{ hostvars['fleet_token_holder']['fleet_enrollment_token'] }}"
  when: hostvars['fleet_token_holder'] is defined and hostvars['fleet_token_holder']['fleet_enrollment_token'] is defined

- name: Fail if enrollment token not found
  fail:
    msg: "Fleet enrollment token not found. Make sure the elastic-stack role ran successfully."
  when: enrollment_token is not defined

- name: Get Elastic server IP
  set_fact:
    elastic_ip: "{{ hostvars['elastic']['ansible_host'] }}"

- name: Install and configure Elastic Agent
  win_shell: |
    $msi = "C:\Temp\elastic-agent-{{ stack_version }}-windows-x86_64.msi"
    $args = "/i `"$msi`" /quiet /norestart FLEET_ENROLL=1 FLEET_URL=http://{{ elastic_ip }}:8220 FLEET_ENROLLMENT_TOKEN={{ enrollment_token }} FLEET_INSECURE=1"
    
    Write-Output "Installing Elastic Agent..."
    $process = Start-Process msiexec.exe -ArgumentList $args -Wait -NoNewWindow -PassThru
    
    if ($process.ExitCode -ne 0) {
        throw "MSI installation failed with exit code $($process.ExitCode)"
    }
    
    Write-Output "Installation completed, waiting for service..."
    
    # Wait for service to be created (up to 5 minutes)
    $timeout = 300
    $timer = 0
    do {
        Start-Sleep -Seconds 5
        $timer += 5
        $service = Get-Service -Name "Elastic Agent" -ErrorAction SilentlyContinue
        Write-Output "Checking for service... ($timer seconds elapsed)"
    } while (-not $service -and $timer -lt $timeout)
    
    if (-not $service) {
        throw "Elastic Agent service was not created within $timeout seconds"
    }
    
    Write-Output "Service found! Status: $($service.Status)"
    
    # Start and configure the service
    if ($service.Status -ne "Running") {
        Write-Output "Starting Elastic Agent service..."
        Start-Service -Name "Elastic Agent"
    }
    
    # Set to automatic startup
    Set-Service -Name "Elastic Agent" -StartupType Automatic
    
    # Final status check
    $service = Get-Service -Name "Elastic Agent"
    Write-Output "Final service status: $($service.Status)"
    Write-Output "Service start type: $($service.StartType)"
    
    # Check agent status
    $agentPath = "C:\Program Files\Elastic\Agent\elastic-agent.exe"
    if (Test-Path $agentPath) {
        Write-Output "Checking agent enrollment status..."
        try {
            $agentStatus = & $agentPath status
            Write-Output "Agent status output:"
            Write-Output $agentStatus
        } catch {
            Write-Output "Could not get agent status: $($_.Exception.Message)"
        }
    } else {
        Write-Output "Warning: Agent executable not found at $agentPath"
    }
  args:
    executable: PowerShell
  register: install_result
  failed_when: install_result.rc != 0

- name: Display installation summary
  debug:
    msg: "{{ install_result.stdout_lines }}"