- name: Install Kibana
  apt:
    name: "kibana={{ kibana_version }}"
    state: present
  notify: restart kibana

- name: Create kibana configuration
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: '0660'
  notify: restart kibana

- name: Start and enable Kibana
  systemd:
    name: kibana
    state: started
    enabled: yes

- name: Wait for Kibana to start
  wait_for:
    port: "{{ kibana_port }}"
    host: "localhost"
    delay: 60

- name: Wait for Elasticsearch to be ready
  uri:
    url: "http://localhost:9200/_cluster/health"
    user: "elastic"
    password: "elastic"
    force_basic_auth: yes
  register: es_health
  until: es_health.json.status in ["yellow", "green"]
  retries: 20
  delay: 15

- name: Wait additional time for Kibana API to be ready
  wait_for:
    port: "{{ kibana_port }}"
    host: "localhost"
    delay: 60
    timeout: 300

- name: Verify Kibana is fully operational
  uri:
    url: "http://localhost:{{ kibana_port }}/api/status"
    method: GET
  register: kibana_status
  until: kibana_status.status == 200
  retries: 15
  delay: 20

- name: Check if Kibana API is responsive
  uri:
    url: "http://localhost:{{ kibana_port }}/api/status"
    method: GET
  register: kibana_status
  until: kibana_status.status == 200
  retries: 20
  delay: 15

- name: Import Windows Security Dashboards and Index Patterns
  uri:
    url: "http://localhost:{{ kibana_port }}/api/saved_objects/_import"
    method: POST
    headers:
      kbn-xsrf: true
      Content-Type: application/json
    body: "{{ lookup('file', 'windows_dashboards.json') }}"
    body_format: json
  register: dashboard_import_result
  until: dashboard_import_result.status in [200, 409]  # 409 = conflict (already exists)
  retries: 3
  delay: 15

- name: Display dashboard import status
  debug:
    msg: 
      - "Dashboard import result: {{ dashboard_import_result.json.success | default('unknown') }}"
      - "Errors: {{ dashboard_import_result.json.errors | default('none') }}"
  when: dashboard_import_result.json is defined

- name: Create default index pattern if import failed
  uri:
    url: "http://localhost:{{ kibana_port }}/api/saved_objects/index-pattern/windows-security-default"
    method: POST
    headers:
      Content-Type: "application/json"
      kbn-xsrf: true
    body_format: json
    body:
      attributes:
        title: "windows-*,logs-windows.*"
        timeFieldName: "@timestamp"
  register: fallback_index_result
  failed_when: false
  when: dashboard_import_result.json.success is not defined or not dashboard_import_result.json.success

- name: Set default index pattern
  uri:
    url: "http://localhost:{{ kibana_port }}/api/kibana/settings/defaultIndex"
    method: POST
    headers:
      Content-Type: "application/json"
      kbn-xsrf: true
    body_format: json
    body:
      value: "windows-security-index-pattern"
  register: default_index_result
  failed_when: false

- name: Enable Elastic Security app (if available)
  uri:
    url: "http://localhost:{{ kibana_port }}/api/security_solution/sourcerer"
    method: POST
    headers:
      Content-Type: "application/json"
      kbn-xsrf: true
    body_format: json
    body:
      patternList: ["windows-*", "logs-windows.*", "logs-endpoint.*", "security-alerts-*"]
  register: security_app_result
  failed_when: false

- name: Verify Kibana health
  uri:
    url: "http://localhost:{{ kibana_port }}/api/status"
    method: GET
  register: kibana_final_health

- name: Display comprehensive access information
  debug:
    msg:
      - "==============================================="
      - "Elastic Stack Installation Complete!"
      - "==============================================="
      - "Kibana URL: http://{{ ansible_default_ipv4.address }}:{{ kibana_port }}"
      - "Elasticsearch URL: http://{{ ansible_default_ipv4.address }}:9200"
      - "Username: elastic"
      - "Password: elastic"
      - "==============================================="
      - "Service Status:"
      - "- Elasticsearch: {{ final_es_health.json.status | default('Unknown') }}"
      - "- Kibana: {{ 'Healthy' if kibana_final_health.status == 200 else 'Issue detected' }}"
      - "==============================================="
      - "Available Dashboards:"
      - "- Windows Security Events Dashboard"
      - "- Active Directory Authentication Dashboard" 
      - "- Endpoint Security Overview Dashboard"
      - "- Network Security Dashboard"
      - "- Attack Timeline Dashboard"
      - "==============================================="
      - "Navigate to Analytics > Dashboard to access pre-built dashboards"
      - "Navigate to Analytics > Discover to explore raw log data"
      - "==============================================="